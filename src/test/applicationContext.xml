<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">

    <!-- 配置目标对象 -->
    <bean name="UserService" class="service.impl.UserServiceImpl"></bean>
    <!-- 配置通知对象 -->
    <bean name="myAdvice" class="advice.MyAdvice"></bean>

    <aop:config>
        <!--
            配置切入点
            public service.UserServiceImpl.save()
			void service.UserServiceImpl.save()
			* service.UserServiceImpl.save()
			* service.UserServiceImpl.*()

			* service.*ServiceImpl.*(..)
			* service..*ServiceImpl.*(..)
        -->
        <aop:pointcut expression="execution(* service.impl.*ServiceImpl.*(..))" id="pc"/>
        <aop:aspect ref="myAdvice">
            <!-- 指定before方法作为前置通知-->
            <aop:before method="before" pointcut="pc"/>
            <!-- 后置 -->
            <aop:after-returning method="afterReturning" pointcut="pc"/>
            <!-- 环绕通知 -->
            <aop:around method="around" pointcut="pc"/>
            <!-- 异常拦截通知 -->
            <aop:after-throwing method="afterException" pointcut="pc"/>
            <!-- 后置 -->
            <aop:after method="after" pointcut="pc"/>
        </aop:aspect>

    </aop:config>

</beans>